/* tslint:disable */
/* eslint-disable */
/**
 * The Platform Configuration API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PropertyModel } from './PropertyModel';
import {
    PropertyModelFromJSON,
    PropertyModelFromJSONTyped,
    PropertyModelToJSON,
} from './PropertyModel';
import type { PropertyTypeModel } from './PropertyTypeModel';
import {
    PropertyTypeModelFromJSON,
    PropertyTypeModelFromJSONTyped,
    PropertyTypeModelToJSON,
} from './PropertyTypeModel';

/**
 * A task property used in task dispatchers.
 * @export
 * @interface TaskPropertyModel
 */
export interface TaskPropertyModel extends PropertyModel {
    /**
     * The task name.
     * @type {string}
     * @memberof TaskPropertyModel
     */
    name?: string;
}

/**
 * Check if a given object implements the TaskPropertyModel interface.
 */
export function instanceOfTaskPropertyModel(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TaskPropertyModelFromJSON(json: any): TaskPropertyModel {
    return TaskPropertyModelFromJSONTyped(json, false);
}

export function TaskPropertyModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): TaskPropertyModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        ...PropertyModelFromJSONTyped(json, ignoreDiscriminator),
        'name': !exists(json, 'name') ? undefined : json['name'],
    };
}

export function TaskPropertyModelToJSON(value?: TaskPropertyModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        ...PropertyModelToJSON(value),
        'name': value.name,
    };
}

