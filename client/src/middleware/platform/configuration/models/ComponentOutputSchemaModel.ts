/* tslint:disable */
/* eslint-disable */
/**
 * The Platform Configuration API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PropertyModel } from './PropertyModel';
import {
    PropertyModelFromJSON,
    PropertyModelFromJSONTyped,
    PropertyModelToJSON,
} from './PropertyModel';

/**
 * 
 * @export
 * @interface ComponentOutputSchemaModel
 */
export interface ComponentOutputSchemaModel {
    /**
     * 
     * @type {PropertyModel}
     * @memberof ComponentOutputSchemaModel
     */
    definition: PropertyModel;
    /**
     * The sample value of the action's/trigger's output.
     * @type {object}
     * @memberof ComponentOutputSchemaModel
     */
    sampleOutput: object;
}

/**
 * Check if a given object implements the ComponentOutputSchemaModel interface.
 */
export function instanceOfComponentOutputSchemaModel(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "definition" in value;
    isInstance = isInstance && "sampleOutput" in value;

    return isInstance;
}

export function ComponentOutputSchemaModelFromJSON(json: any): ComponentOutputSchemaModel {
    return ComponentOutputSchemaModelFromJSONTyped(json, false);
}

export function ComponentOutputSchemaModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): ComponentOutputSchemaModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'definition': PropertyModelFromJSON(json['definition']),
        'sampleOutput': json['sampleOutput'],
    };
}

export function ComponentOutputSchemaModelToJSON(value?: ComponentOutputSchemaModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'definition': PropertyModelToJSON(value.definition),
        'sampleOutput': value.sampleOutput,
    };
}

