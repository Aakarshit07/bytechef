/* tslint:disable */
/* eslint-disable */
/**
 * The Definition API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PropertyModel } from './PropertyModel';
import {
    PropertyModelFromJSON,
    PropertyModelFromJSONTyped,
    PropertyModelToJSON,
} from './PropertyModel';

/**
 * An output schema response.
 * @export
 * @interface OutputSchemaResponseModel
 */
export interface OutputSchemaResponseModel {
    /**
     * The error message.
     * @type {string}
     * @memberof OutputSchemaResponseModel
     */
    errorMessage?: string;
    /**
     * 
     * @type {PropertyModel}
     * @memberof OutputSchemaResponseModel
     */
    property?: PropertyModel;
}

/**
 * Check if a given object implements the OutputSchemaResponseModel interface.
 */
export function instanceOfOutputSchemaResponseModel(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function OutputSchemaResponseModelFromJSON(json: any): OutputSchemaResponseModel {
    return OutputSchemaResponseModelFromJSONTyped(json, false);
}

export function OutputSchemaResponseModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): OutputSchemaResponseModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'errorMessage': !exists(json, 'errorMessage') ? undefined : json['errorMessage'],
        'property': !exists(json, 'property') ? undefined : PropertyModelFromJSON(json['property']),
    };
}

export function OutputSchemaResponseModelToJSON(value?: OutputSchemaResponseModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'errorMessage': value.errorMessage,
        'property': PropertyModelToJSON(value.property),
    };
}

